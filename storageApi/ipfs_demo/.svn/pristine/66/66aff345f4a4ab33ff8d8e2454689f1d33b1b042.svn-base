package cn.iinda.ipfs_demo.controller;

import cn.iinda.ipfs_demo.model.ElectronicFilmResult;
import org.apache.catalina.servlet4preview.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.ResourceLoader;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import cn.iinda.healthwallet_ipfs_api;

import java.io.IOException;
import java.io.File;
import java.io.FileOutputStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;


/**
 * @version V3.0
 * @Title: IpfsController
 * @Company: 成都影达科技有限公司
 * @Description: 处理文件上传下载
 * @author: 东进
 * @date 2018-02-26 16:23
 */
@RestController
public class IpfsController {

    public static final String ROOT = "upload-dir";

    private final ResourceLoader resourceLoader;

    healthwallet_ipfs_api ipfs = new healthwallet_ipfs_api("/ip4/192.168.2.9/tcp/5001|/ip4/192.168.2.226/tcp/5001");

    @Autowired
    public IpfsController(ResourceLoader resourceLoader) {
        this.resourceLoader = resourceLoader;
    }

    //处理文件上传
    @RequestMapping(value = "/testuploadimg", method = RequestMethod.POST)
    public String uploadImg(@RequestParam("myfile") MultipartFile myfile, @RequestParam("pass") String pass,
                            HttpServletRequest request) {
        String fileName = myfile.getOriginalFilename();
        String filePath = request.getSession().getServletContext().getRealPath("imge/");
        String hash2 = null;
        try {
            uploadFile(myfile.getBytes(), filePath, fileName);
            hash2 = ipfs.AddFileEncrypt(filePath + fileName, pass);
        } catch (Exception e) {
            System.out.printf("有错");
        }
        return hash2;
    }

    @GetMapping(value = "showImg/{hash}/{password}")
    public ElectronicFilmResult showImg(HttpServletRequest request, @PathVariable("hash") String hash, @PathVariable("password") String password) throws IOException {
        if (null == hash || hash.trim().equals(""))
            return ElectronicFilmResult.build(400, "hash值不能为空");
        if (null == password || password.trim().equals(""))
            return ElectronicFilmResult.build(400, "password不能为空");
        List<String> list = new ArrayList<>();
        String url = "urls=[";
        if (hash.contains(",")) {
            String[] strs = hash.split(",");
            for (int i = 0, len = strs.length; i < len; i++) {
                Date date = new Date();
                String fileName = date.getTime() + ".dcm";
                ipfs.GetFileEncrypt(strs[i].toString(), "src/main/webapp/" + fileName, password);
                if (i != 0)
                    url = url + ",";
                url = url + "\"http://127.0.0.1:8087/" + fileName + "\"";
            }
        } else {
            Date date = new Date();
            String fileName = date.getTime() + ".dcm";
            ipfs.GetFileEncrypt(hash, "src/main/webapp/" + fileName, password);
            url = url + "\"http://127.0.0.1:8087/" + fileName + "\"";
        }
        url = url + "]";
        System.out.printf(url);
//        return ElectronicFilmResult.ok("urls=[\"http://127.0.0.1:8087/" + fileName + "\"]");
        return ElectronicFilmResult.ok(url);
    }


    public static void uploadFile(byte[] file, String filePath, String fileName) throws Exception {
        File targetFile = new File(filePath);
        if (!targetFile.exists()) {
            targetFile.mkdirs();
        }
        FileOutputStream out = new FileOutputStream(filePath + fileName);
        out.write(file);
        out.flush();
        out.close();
    }
}