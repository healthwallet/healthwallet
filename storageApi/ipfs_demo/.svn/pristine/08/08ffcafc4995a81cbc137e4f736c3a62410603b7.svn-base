package cn.iinda.ipfs_demo.controller;

import org.apache.catalina.servlet4preview.http.HttpServletRequest;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;
import cn.iinda.healthwallet_ipfs_api;

import java.io.OutputStream;
import java.io.File;
import java.io.FileOutputStream;


/**
 * @version V3.0
 * @Title: IpfsController
 * @Company: 成都影达科技有限公司
 * @Description: 处理文件上传下载
 * @author: 东进
 * @date 2018-02-26 16:23
 */
@RestController
public class IpfsController {

    //处理文件上传
    @RequestMapping(value = "/testuploadimg", method = RequestMethod.POST)
    public String uploadImg(@RequestParam("myfile") MultipartFile myfile,
                            HttpServletRequest request) {
        String contentType = myfile.getContentType();
        String fileName = myfile.getOriginalFilename();
        String filePath = request.getSession().getServletContext().getRealPath("imge/");
        String hash2 = null;
        try {
            uploadFile(myfile.getBytes(), filePath, fileName);
            healthwallet_ipfs_api ipfs = new healthwallet_ipfs_api("/ip4/192.168.2.9/tcp/5001|/ip4/192.168.2.226/tcp/5001");
            hash2 = ipfs.AddZipEncrypt(filePath + fileName, "12345");
            ipfs.GetZipEncrypt(hash2,"/Users/lwy1218/shihj/output","12345");
        } catch (Exception e) {
        }
        System.out.println("hello");
        return hash2;
    }

    public static void uploadFile(byte[] file, String filePath, String fileName) throws Exception {
        File targetFile = new File(filePath);
        if (!targetFile.exists()) {
            targetFile.mkdirs();
        }
        FileOutputStream out = new FileOutputStream(filePath + fileName);
        out.write(file);
        out.flush();
        out.close();
    }
}
